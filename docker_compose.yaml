version: "3.8"

services:
  immunity:
    container_name: immunity
    image: .
    networks:
      - immunity-net
    ports:
      - "4195:4195"

  redpanda:
    image: docker.redpanda.com/vectorized/redpanda:v23.3.5
    container_name: immunity-redpanda
    networks:
      - immunity-net
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr 0.0.0.0:8082
      - --advertise-pandaproxy-addr localhost:8082
    ports:
      - "8081:8081"
      - "8082:8082"
      - "9092:9092"
      - "9644:9644"
      - "29092:29092"

  redpanda_console:
    container_name: immunity-redpanda_console
    image: docker.redpanda.com/vectorized/console:latest
    networks:
      - immunity-net
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:29092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
        connect:
          enabled: true
          clusters:
            - name: local-connect-cluster
              url: http://connect:8083
    ports:
      - "8080:8080"

  rules_stream:
    image: jeffail/benthos
    networks:
      - immunity-net
    volumes:
      - "./benthos/rules_stream.yaml:/benthos.yaml"
    ports:
      - "4195:4195"

  test_rules_stream:
    image: jeffail/benthos
    networks:
      - immunity-net
    volumes:
      - "./benthos/test/test.yaml:/benthos.yaml"
      - "./benthos/test/TEST.csv:/data/TEST.csv"
    ports:
      - "4196:4196"

  elasticsearch:
    container_name: immunity-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.1
    environment:
      - "xpack.security.enabled=false"
      - "discovery.type=single-node"
      - "http.publish_host=elasticsearch"
    networks:
      - immunity-net
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    container_name: immunity-kibana
    image: docker.elastic.co/kibana/kibana:8.4.1
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - immunity-net
    ports:
      - "5601:5601"

  grafana:
    container_name: immunity-grafana
    image: grafana/grafana-oss:latest
    networks:
      - immunity-net
    ports:
      - "3000:3000"

  db:
    container_name: immunity-postgres
    image: postgres:14.1-alpine
    networks:
      - immunity-net
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data

networks:
  immunity-net:
    driver: bridge

volumes:
  db:
    driver: local

